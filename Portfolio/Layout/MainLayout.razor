@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudContainer Class="z-60 d-flex flex-grow-1 gap-4 px-0 fixed">
        <MudContainer Class="z-60 rounded-br-xl ml-0 d-flex"
            Style="background-color: var(--mud-palette-black); max-width: fit-content; height:8rem">
            <MudText Class="align-self-center" Typo="Typo.h4" Color="Color.Tertiary"><b>Nic Bolton</b></MudText>
        </MudContainer>
        <MudContainer Class="pt-10">
            <MudContainer Class="d-flex d-md-none">
                <SmallMenu DarkModeAction="@DarkModeToggle" DarkLightModeButtonIcon="@DarkLightModeButtonIcon" />
            </MudContainer>
            <MudContainer Class="d-none d-md-flex">
                <TopMenu DarkModeAction="@DarkModeToggle" DarkLightModeButtonIcon="@DarkLightModeButtonIcon" />
            </MudContainer>
        </MudContainer>
    </MudContainer>
    @* <MudGrid Class="z-60" Style="position: fixed">
    <MudItem xs="4" md="2" Class="rounded-br-xl mx-10" style="background-color: var(--mud-palette-black)">
    <MudText Class="py-8 ma-auto" Typo="Typo.h4" Color="Color.Tertiary"><b>Nic Bolton</b></MudText>
    </MudItem>
    <MudItem xs="5" Class="align-content-center">
    <MudContainer Class="d-flex d-md-none">
    <SmallMenu />
    </MudContainer>
    <MudContainer Class="d-none d-md-flex">
    <TopMenu DarkModeAction="@DarkModeToggle" DarkLightModeButtonIcon="@DarkLightModeButtonIcon" />
    </MudContainer>
    </MudItem>
    </MudGrid> *@
    <MudMainContent Class="mx-10 mx-lg-20">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<style>
    html {
        /* for smooth scroll on anchor clicks */
        scroll-behavior: smooth;
    }
</style>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
            {
                PaletteLight = _lightPalette,
                PaletteDark = _darkPalette,
                LayoutProperties = new LayoutProperties()
            };
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
        StateHasChanged();
    }

    private readonly PaletteLight _lightPalette = new()
        {
            Black = "#ffffff",
            Tertiary = "#000000",
            AppbarText = "#D1C4E9",
            AppbarBackground = "#000000",
            DrawerBackground = "#ffffff",
            GrayLight = "#e8e8e8",
            GrayLighter = "#f9f9f9",
            Dark = "#e0e0e0",
            DarkContrastText = "#2e2e2e"
        };

    private readonly PaletteDark _darkPalette = new()
        {
            Primary = "#7e6fff",
            Surface = "#1e1e2d",
            Background = "#000000",
            BackgroundGray = "#151521",
            AppbarText = "#311B92",
            AppbarBackground = "rgba(245,239,255,0.75)",
            DrawerBackground = "#1a1a27",
            ActionDefault = "#74718e",
            ActionDisabled = "#9999994d",
            ActionDisabledBackground = "#605f6d4d",
            TextPrimary = "#b2b0bf",
            TextSecondary = "#92929f",
            TextDisabled = "#ffffff33",
            DrawerIcon = "#92929f",
            DrawerText = "#92929f",
            GrayLight = "#2a2833",
            GrayLighter = "#1e1e2d",
            Info = "#4a86ff",
            Success = "#3dcb6c",
            Warning = "#ffb545",
            Error = "#ff3f5f",
            LinesDefault = "#33323e",
            TableLines = "#33323e",
            Divider = "#292838",
            OverlayLight = "#1e1e2d80",
            Tertiary = "#ffffff",
            TertiaryContrastText = "#7e6fff",
            Black = "#000000",
            Dark = "#2e2e2e"
        };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}