@page "/"
@inject IJSRuntime JS

<MudGrid Class="pb-20">
    <MudItem xs="12" md="9">
        <MudGrid Class="rounded-xl welcome-gradient">
            <MudItem xs="12" Style="height: 55vh">
                &nbsp;
            </MudItem>
            <MudItem Class="rounded-tr-xl align-content-center" xs="10" sm="7" md="5"
                Style="background: var(--mud-palette-black); min-height: 40vh;">
                <div id="#b-animate">
                    <Animate Anchor="#b-animate" Animation="Animations.Fade">
                        <MudText Class="pb-8" Typo="Typo.h4" Color="Color.Tertiary">
                            <b>Solving problems</b>
                        </MudText>
                        <MudText Class="pb-8" Typo="Typo.h4" Color="Color.Tertiary">
                            <b>Continuously learning</b>
                        </MudText>
                        <MudText Class="pb-8" Typo="Typo.h4" Color="Color.Tertiary">
                            <b>Driving innovation</b>
                        </MudText>
                    </Animate>
                </div>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12" md="3">
        <div id="stats">
            <div id="#b-animate">
                <Animate Anchor="#b-animate" @ref="projectAnimRefs[6]" Auto="false">
                    <MudContainer Class="mb-5 py-8 rounded-xl border-solid border-4"
                        Style="border-color: var(--mud-palette-primary)" Fixed="true">
                        <CommitCount />
                    </MudContainer>
                </Animate>
            </div>
        </div>
        <div id="comingsoon">
            <div id="#b-animate">
                <Animate Anchor="#b-animate" @ref="projectAnimRefs[7]" Auto="false">
                    <MudPaper Class="mb-5 py-8 rounded-xl">
                        <ComingSoon />
                    </MudPaper>
                </Animate>
            </div>
        </div>
    </MudItem>
</MudGrid>

<MudText>WEB PROJECTS</MudText>
<MudDivider />

<MudGrid Class="py-5 pb-20" id="projects">
    @{
        int i = 0;
        foreach (Project project in projects!)
        {
            int j = i;
            <MudItem xs="12" sm="6" md="3" id=@($"project{j}")>
                @* <div id="#b-animate">
        <Animate Anchor="#b-animate" @ref="projectAnimRefs[j]" Auto="false"> *@
                <ProjectCard project="@project" />
                @* </Animate>
        </div> *@
            </MudItem>
            i++;
        }
    }
</MudGrid>

<MudText>ABOUT ME</MudText>
<MudDivider />

<MudGrid Class="py-5 pb-20" id="me">
    <MudItem xs="12" sm="6">
        <MudGrid>
            <MudItem xs="12" id="mehome">
                @* <div id="#b-animate">
                <Animate Anchor="#b-animate" @ref="projectAnimRefs[8]" Auto="false"> *@
                <MudPaper Elevation="2" Class="pa-4 d-flex flex-grow-1 gap-4" Style="min-height: 200px;">
                    <MudText Class="flex-auto d-flex py-8 align-self-center" Color="Color.Tertiary">
                        I grew up and am currently based in Windsor, Ontario. I attend the University of Windsor
                        and
                        will be graduating in 2025 as a double major in physics and computer science.
                    </MudText>
                    <MudLink Class="flex-none d-flex align-self-center" Href="https://www.uwindsor.ca/" Target="blank">
                        <MudImage Src="img/uwinpng.png" style="height: 80px;" />
                    </MudLink>
                </MudPaper>
                @* </Animate>
                </div> *@
            </MudItem>
            <MudItem xs="12" id="mecoding">
                @* <div id="#b-animate">
                <Animate Anchor="#b-animate" @ref="projectAnimRefs[9]" Auto="false"> *@
                <MudPaper Elevation="2" Class="pa-4 d-flex flex-grow-1 gap-4" Style="min-height: 200px;">
                    <MudText Class="flex-auto d-flex py-8 align-self-center" Color="Color.Tertiary">
                        I've been building web apps over the past year using the .NET environment. I've loved
                        developing with Blazor and libraries such as Blazorise and MudBlazor.
                    </MudText>
                    <MudLink Class="flex-none d-flex align-self-center" Href="https://dotnet.microsoft.com/en-us/"
                        Target="blank">
                        <MudImage Src="https://upload.wikimedia.org/wikipedia/commons/d/d0/Blazor.png"
                            style="height: 80px;" />
                    </MudLink>
                </MudPaper>
                @* </Animate>
                </div> *@
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12" sm="6" id="mephysics">
        @* <div id="#b-animate">
        <Animate Anchor="#b-animate" @ref="projectAnimRefs[10]" Auto="false"> *@
        <MudPaper Elevation="2" Class="pa-4" Style="min-height: 424px">
            <MudText Class="pb-8" Color="Color.Tertiary">
                I enjoy learning physics and have done some research in the field. Below are some research
                projects I've
                worked on.
            </MudText>
            <MudGrid Class="pl-4 pl-sm-0">
                <MudItem Class="d-flex justify-center" xs="3">
                    <MudLink Href="https://github.com/bolst/CISSCO" Target="blank">
                        <MudImage Src="https://imagej.net/media/icons/imagej2-shadow.png" style="height: 80px;" />
                    </MudLink>
                </MudItem>
                <MudItem Class="d-flex justify-center" xs="9">
                    <MudText Class="flex-auto d-flex align-self-center" Color="Color.Tertiary">
                        A plug-in for ImageJ which can quantify specific values around micro-bleeds such as
                        magnetic
                        moments
                    </MudText>
                </MudItem>
                <MudItem Class="d-flex justify-center" xs="3">
                    <MudLink Href="https://github.com/bolst/PCAANN" Target="blank">
                        <MudImage Src="https://seeklogo.com/images/T/tensorflow-logo-C69AEAC9D0-seeklogo.com.png"
                            style="height: 80px;" />
                    </MudLink>
                </MudItem>
                <MudItem Class="d-flex justify-center" xs="9">
                    <MudText Class="flex-auto d-flex align-self-center" Color="Color.Tertiary">
                        App to find optimal parameters for the machine learning programs that analyze bacterial
                        spectra
                        in Dr. Steven Rehse's lab
                    </MudText>
                </MudItem>
                <MudItem Class="d-flex justify-center" xs="3">
                    <MudLink Href="https://github.com/bolst/HHG" Target="blank">
                        <MudImage Src="https://cdn-icons-png.flaticon.com/512/7343/7343843.png" style="height: 80px;" />
                    </MudLink>
                </MudItem>
                <MudItem Class="d-flex justify-center" xs="9">
                    <MudText Class="flex-auto d-flex align-self-center" Color="Color.Tertiary">
                        Notebooks on High-Harmonic Generation in solids, which involves solving the TDSE in
                        different
                        lattices
                    </MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
        @* </Animate>
        </div> *@
    </MudItem>
    <MudItem xs="12" sm="8" id="mehockey">
        @* <div id="#b-animate">
        <Animate Anchor="#b-animate" @ref="projectAnimRefs[11]" Auto="false"> *@
        <MudPaper Elevation="2" Class="pa-4 d-flex justify-center" Style="min-height: 300px;">
            <MudGrid>
                <MudItem Class="d-flex justify-center" xs="12" sm="5">
                    <MudLink Class="d-flex align-self-center"
                        Href="https://www.lakeshorecanadiens.com/2023-2024-schmalz-cup-champions" Target="blank">
                        <MudImage Class="rounded-lg" Elevation="5"
                            Src="https://www.thepjhl.ca/wp-content/uploads/sites/2/2024/05/Schmalz-Cup-Article-780x520.png"
                            Fluid="true" />
                    </MudLink>
                </MudItem>
                <MudItem Class="d-flex justify-center" xs="12" sm="7">
                    <MudText Class="flex-auto d-flex py-8 align-self-center" Color="Color.Tertiary">
                        I have been playing hockey as a goaltender since I was 10 years old. I played 4 years of
                        junior
                        hockey with the Lasalle Vipers, Amherstburg Admirals, and Lakeshore Canadiens. I
                        finished junior
                        hockey in 2024, where I was lucky enough to win a Schmalz Cup with Lakeshore.
                    </MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
        @* </Animate>
        </div> *@
    </MudItem>
    <MudItem xs="12" sm="4" id="meboltoncup">
        @* <div id="#b-animate">
        <Animate Anchor="#b-animate" @ref="projectAnimRefs[12]" Auto="false"> *@
        <MudPaper Elevation="2" Class="pa-4 d-flex justify-center" Style="min-height: 300px;">
            <MudGrid>
                <MudItem Class="d-flex justify-center" xs="12" sm="8">
                    <MudText Class="flex-auto d-flex align-self-center" Color="Color.Tertiary">
                        My brother and I run an annual hockey tournament "Bolton Cup". Last time involved over
                        60 players with $1000+ worth of prizes and multiple sponsorships. Players
                        registered/payed and
                        viewed their game stats through the website we developed.
                    </MudText>
                </MudItem>
                <MudItem Class="d-flex justify-center" xs="12" sm="4">
                    <MudLink Class="d-flex align-self-center" Href="https://boltoncup.ca" Target="blank">
                        <MudImage Class="rounded-lg px-20 px-sm-0" Src="https://boltoncup.ca/logo.png" Fluid="true" />
                    </MudLink>
                </MudItem>
            </MudGrid>
        </MudPaper>
        @* </Animate>
        </div> *@
    </MudItem>
</MudGrid>

<MudText>CONTACT</MudText>
<MudDivider />

<MudGrid Class="mt-0 py-5 pb-20" id="contact">
    <MudItem Class="d-flex align-center" xs="12" sm="6" id="contactcard">
        @* <div id="#b-animate">
        <Animate Anchor="#b-animate" @ref="projectAnimRefs[4]" Auto="false"> *@

        <MudGrid Class="welcome-gradient rounded-xl d-flex flex-grow-1 gap-4">
            <MudItem xs="12">
                <MudText Typo="Typo.h2" Color="Color.Tertiary"><b>Get in touch</b></MudText>
                <MudText Class="pt-4 d-none d-sm-flex" Typo="Typo.h5" Color="Color.Tertiary">Whether it's for
                    work or just to connect, you can find me at any of the handles to the right</MudText>
                <MudText Class="pt-4 px-4 d-flex d-sm-none" Typo="Typo.h5" Color="Color.Tertiary">Whether it's
                    for
                    work or just to connect, you can find me at any of the handles below</MudText>
            </MudItem>
            <MudItem Class="d-flex justify-end" xs="12">
                <MudButton Class="flex-none d-flex ma-8" Variant="Variant.Filled" Href="mailto:nicbolton17@icloud.com"
                    EndIcon="@Icons.Custom.Brands.Telegram" IconColor="Color.Surface" IconSize="Size.Medium"
                    Size="Size.Large" Color="Color.Dark">
                    Contact</MudButton>
            </MudItem>
        </MudGrid>

        @* </Animate>
        </div> *@
    </MudItem>
    <MudItem Class="d-flex align-center" xs="12" sm="6" id="contactitems">
        <MudContainer Fixed="true">
            @* <div id="#b-animate">
            <Animate Anchor="#b-animate" @ref="projectAnimRefs[5]" Auto="false"> *@

            <MudButton Href="https://github.com/bolst" Target="blank" StartIcon="@Icons.Custom.Brands.GitHub"
                Color="Color.Tertiary" Size="Size.Large" IconColor="Color.Tertiary">
                <MudText Typo="Typo.h3">bolst</MudText>
            </MudButton>

            <MudDivider />

            <MudButton Class="py-5" Href="https://linkedin.com/in/nicbolt" Target="blank"
                StartIcon="@Icons.Custom.Brands.LinkedIn" Color="Color.Tertiary" Size="Size.Large"
                IconColor="Color.Info">
                <MudText Typo="Typo.h3">Nic Bolton</MudText>
            </MudButton>

            <MudDivider />

            <MudButton Class="py-5" Href="https://open.spotify.com/user/yxw5r5gm2z1weqe2ypfmzjvxg?si=f851154a80ed48a2"
                Target="blank" StartIcon="@spotifyIcon" Color="Color.Tertiary" Size="Size.Large"
                IconColor="Color.Success">
                <MudText Typo="Typo.h3">nicbolton</MudText>
            </MudButton>

            @* </Animate>
            </div> *@
        </MudContainer>
    </MudItem>
</MudGrid>

<script>
    function addIntersectionObserver(dotNetHelper, queryStr, animIndex, animStr) {
        var observer = new IntersectionObserver((entries) => {
            if (entries[0].isIntersecting === true) {
                dotNetHelper.invokeMethodAsync('DoAnimation', queryStr, animIndex, animStr);
            }
        },
            { threshold: [1] }
        );

        observer.observe(document.querySelector(queryStr));
    }
</script>



@code {

    private DotNetObjectReference<Home>? objRef;

    const string spotifyIcon = @"<svg style=""width:24px;height:24px"" viewBox=""0 0 24 24"">
<path fill=""currentColor"" d=""M19.098
10.638c-3.868-2.297-10.248-2.508-13.941-1.387-.593.18-1.22-.155-1.399-.748-.18-.593.154-1.22.748-1.4 4.239-1.287
11.285-1.038 15.738 1.605.533.317.708 1.005.392 1.538-.316.533-1.005.709-1.538.392zm-.126
3.403c-.272.44-.847.578-1.287.308-3.225-1.982-8.142-2.557-11.958-1.399-.494.15-1.017-.129-1.167-.623-.149-.495.13-1.016.624-1.167
4.358-1.322 9.776-.682 13.48 1.595.44.27.578.847.308 1.286zm-1.469
3.267c-.215.354-.676.465-1.028.249-2.818-1.722-6.365-2.111-10.542-1.157-.402.092-.803-.16-.895-.562-.092-.403.159-.804.562-.896
4.571-1.045 8.492-.595 11.655 1.338.353.215.464.676.248 1.028zm-5.503-17.308c-6.627 0-12 5.373-12 12 0 6.628 5.373 12 12
12 6.628 0 12-5.372 12-12 0-6.627-5.372-12-12-12z"" />
</svg>";

    #region Animate

    List<Blazorise.Animate.IAnimation> ProjectAnimations = new()
{
Animations.ZoomOutRight,
Animations.ZoomOutDown,
Animations.ZoomOutUp,
Animations.ZoomOutLeft,
};

    private Animate[] projectAnimRefs = new Animate[13];

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            /* await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#project0", 0, "ZoomOutRight");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#project1", 1, "ZoomOutDown");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#project2", 2, "ZoomOutUp");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#project3", 3, "ZoomOutLeft");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#contactcard", 4, "SlideRight");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#contactitems", 5, "SlideLeft"); */
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#stats", 6, "FadeDownLeft");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#comingsoon", 7, "FadeUpLeft");
            /* await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#mehome", 8, "SlideRight");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#mecoding", 9, "SlideRight");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#mephysics", 10, "SlideLeft");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#mehockey", 11, "SlideUp");
            await JS.InvokeVoidAsync("addIntersectionObserver", objRef, "#meboltoncup", 12, "SlideUp"); */
        }
    }

    [JSInvokable]
    public void DoAnimation(string elemID, int animIndex, string animStr)
    {
        if (animIndex >= 0 && animIndex < projectAnimRefs.Length)
        {
            if (Animations.TryParse(animStr, out var anim))
                projectAnimRefs[animIndex].Animation = anim;
            else
                projectAnimRefs[animIndex].Animation = Animations.Fade;

            projectAnimRefs[animIndex].Run();
        }
        StateHasChanged();
    }
    #endregion


    List<Project>? projects = null;
    protected override void OnInitialized()
    {
        projects = new()
{
new Project
{
Name="Bolton Cup",
Link="https://boltoncup.ca",
Background="img/project-banners/boltoncup.webp",
Foreground="img/project-banners/boltoncup.png"
},
new Project
{
Name="Proto-Plastics",
Link="https://protoplastics.ca",
Background="img/project-banners/proto.webp",
Foreground="img/project-banners/proto.png"
},
new Project
{
Name="Road to Schmalz",
Link="https://github.com/bolst/roadtoschmalz",
Background="img/project-banners/r2s.webp",
Foreground="img/project-banners/r2s.png"
},
new Project
{
Name="BR Boat Buddy's",
Link="https://brboatbuddys.azurewebsites.net",
Background="img/project-banners/boatbuddys.webp",
Foreground="img/project-banners/boatbuddys.png"
},
};

        objRef = DotNetObjectReference.Create(this);

    }

}